[{"/home/rafakoller/code/calculadora/src/index.js":"1","/home/rafakoller/code/calculadora/src/App.js":"2","/home/rafakoller/code/calculadora/src/styles.js":"3","/home/rafakoller/code/calculadora/src/global.js":"4","/home/rafakoller/code/calculadora/src/components/Input/index.js":"5","/home/rafakoller/code/calculadora/src/components/Input/styles.js":"6","/home/rafakoller/code/calculadora/src/components/Button/index.js":"7","/home/rafakoller/code/calculadora/src/components/Button/styles.js":"8","/home/rafakoller/code/calculadora/src/components/Button/ButtonOper.js":"9"},{"size":289,"mtime":1696901157277,"results":"10","hashOfConfig":"11"},{"size":3673,"mtime":1696975256681,"results":"12","hashOfConfig":"11"},{"size":678,"mtime":1696973966121,"results":"13","hashOfConfig":"11"},{"size":149,"mtime":1696901045447,"results":"14","hashOfConfig":"11"},{"size":211,"mtime":1696905641387,"results":"15","hashOfConfig":"11"},{"size":515,"mtime":1696975514381,"results":"16","hashOfConfig":"11"},{"size":217,"mtime":1696975232781,"results":"17","hashOfConfig":"11"},{"size":761,"mtime":1696975818151,"results":"18","hashOfConfig":"11"},{"size":240,"mtime":1696975245191,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"82wnzw",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rafakoller/code/calculadora/src/index.js",[],[],"/home/rafakoller/code/calculadora/src/App.js",["48","49","50"],[],"import Input from './components/Input'\nimport Button from './components/Button'\nimport ButtonOper from './components/Button/ButtonOper'\nimport { Container,Content,Row } from './styles.js';\nimport { useState } from 'react';\n\nconst App = () => {\n  const [currentNumber, setCurrentNumber] = useState('');\n  const [firstNumber, setFirstNumber] = useState('0');\n  const handleOnClear = () => {\n    setCurrentNumber('');\n    setFirstNumber('0');\n  };\n  const handleAddNumber = (number) => {\n    setCurrentNumber(prev => `${trataPrev(number,prev)}`)\n  };\n  const trataPrev = (number,prev) => {\n    let opers = ['+','-','*','/','%','√','x²'];\n    if (number === '=') {\n      opers.map(function(simboloper, i) {\n        if (prev.includes(simboloper)) {\n          handleCalcNumbers(simboloper);\n        }  \n      })\n    }\n    if (!prev.includes('.')) {\n      if (number === '.' && prev === ''){\n        prev = '0';\n      } \n    } else if (number === '.' && (!prev.includes('+'))) {\n      number = '';\n    }\n    return prev + number;\n  };\n\n  const handleCalcNumbers = (operator) => {\n      let nrAtu = currentNumber.split(operator);\n      let result = 0;\n      switch (operator) {\n        case '+':\n          result = Number(nrAtu[0]) + Number(nrAtu[1]);\n        break;\n        case '-':\n          result = Number(nrAtu[0]) - Number(nrAtu[1]);\n        break;\n        case '*':\n          result = Number(nrAtu[0]) * Number(nrAtu[1]);\n        break;\n        case '/':\n          result = Number(nrAtu[0]) / Number(nrAtu[1]);\n        break;\n        case '%':\n          result =  (Number(nrAtu[1]) / 100) * Number(nrAtu[0]);\n        break;\n        case '√':\n          result =  Math.sqrt(Number((nrAtu[0] === '')?nrAtu[1]:nrAtu[0]));\n        break;\n        case 'x²':\n          let self = (nrAtu[0] === '') ? nrAtu[1] : nrAtu[0];\n          result =  Number(self) * Number(self);\n        break;\n      }\n      setFirstNumber(String(result));\n      setCurrentNumber(String(result));\n  }\n\n  return (\n    <Container>\n      <Content>\n        <Input value={currentNumber} />\n        <Row>\n          <ButtonOper label=\"%\" onClick={() => handleAddNumber('%')} />\n          <ButtonOper label=\"x²\" onClick={() => handleAddNumber('x²')} />\n          <ButtonOper label=\"√\" onClick={() => handleAddNumber('√')} />\n          <ButtonOper label=\"/\" onClick={() => handleAddNumber('/')} />\n          \n        </Row>\n        <Row>\n          <Button label=\"7\" onClick={() => handleAddNumber('7')} />\n          <Button label=\"8\" onClick={() => handleAddNumber('8')} />\n          <Button label=\"9\" onClick={() => handleAddNumber('9')} />\n          <ButtonOper label=\"*\" onClick={() => handleAddNumber('*')} />\n        </Row>\n        <Row>\n          <Button label=\"4\" onClick={() => handleAddNumber('4')} />\n          <Button label=\"5\" onClick={() => handleAddNumber('5')} />\n          <Button label=\"6\" onClick={() => handleAddNumber('6')} />\n          <ButtonOper label=\"+\" onClick={() => handleAddNumber('+')} />\n        </Row>\n        <Row>\n          <Button label=\"1\" onClick={() => handleAddNumber('1')} />\n          <Button label=\"2\" onClick={() => handleAddNumber('2')} />\n          <Button label=\"3\" onClick={() => handleAddNumber('3')} />\n          <ButtonOper label=\"-\" onClick={() => handleAddNumber('-')} />\n        </Row>\n        <Row>\n          <Button label=\".\" onClick={() => handleAddNumber('.')} />\n          <Button label=\"0\" onClick={() => handleAddNumber('0')} />\n          <Button label=\"C\" onClick={() => handleOnClear('')} />\n          <ButtonOper label=\"=\" onClick={() => handleAddNumber('=')} />\n        </Row>\n      </Content>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/rafakoller/code/calculadora/src/styles.js",[],[],"/home/rafakoller/code/calculadora/src/global.js",[],[],"/home/rafakoller/code/calculadora/src/components/Input/index.js",[],[],"/home/rafakoller/code/calculadora/src/components/Input/styles.js",[],[],"/home/rafakoller/code/calculadora/src/components/Button/index.js",[],[],"/home/rafakoller/code/calculadora/src/components/Button/styles.js",[],[],"/home/rafakoller/code/calculadora/src/components/Button/ButtonOper.js",[],[],{"ruleId":"51","severity":1,"message":"52","line":9,"column":10,"nodeType":"53","messageId":"54","endLine":9,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":20,"column":17,"nodeType":"57","messageId":"58","endLine":20,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":39,"column":7,"nodeType":"61","messageId":"62","endLine":62,"endColumn":8},"no-unused-vars","'firstNumber' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]